{"version":3,"sources":["index.js"],"names":["Square","props","className","squaresWinner","onClick","value","Board","i","won","this","sequence","squares","numSquare","board","a","columns","b","push","renderSquare","createBoard","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","winner","setState","concat","step","status","current","squaresWin","moves","map","move","desc","atualy","key","jumpTo","classStatus","handleClick","lines","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a599c1f3.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className={`square ${props.squaresWinner ? 'destaque' : ''}`}\r\n      onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n  renderSquare(i) {\r\n    const won = this.props.sequence &&\r\n      (this.props.sequence[0] === i\r\n        || this.props.sequence[1] === i\r\n        || this.props.sequence[2] === i)\r\n\r\n    return (<Square\r\n      squaresWinner={won}\r\n      value={this.props.squares[i]}\r\n      onClick={() => this.props.onClick(i)}\r\n    />\r\n    )\r\n  }\r\n\r\n  createBoard() {\r\n    let numSquare = 0;\r\n    const board = [];\r\n    for (let a = 0; a < 3; a += 1) {\r\n      const columns = [];\r\n      for (let b = 0; b < 3; b += 1) {\r\n        columns.push(this.renderSquare(numSquare++));\r\n      }\r\n      board.push(<div className=\"board-row\">{columns}</div>);\r\n    }\r\n\r\n    return board;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.createBoard()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null)\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true\r\n    }\r\n  }\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1)\r\n    const current = history[history.length - 1]\r\n    const squares = current.squares.slice()\r\n    if (calculateWinner(squares).winner || squares[i]) {\r\n      return\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\"\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    })\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const history = this.state.history\r\n    const current = history[this.state.stepNumber]\r\n    const { winner, squaresWin } = calculateWinner(current.squares)\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'go to move # ' + move :\r\n        'go to game start'\r\n      const atualy = move === this.state.stepNumber ? 'actuality' : ''\r\n      return (\r\n        <li key={move}>\r\n          <button className={`history ${atualy}`}\r\n          onClick={() => this.jumpTo(move)}>\r\n            {desc}\r\n          \r\n          </button>\r\n        </li>\r\n      )\r\n    })\r\n\r\n    let status\r\n    let classStatus = ''\r\n    if (winner) {\r\n      classStatus = 'status-win'\r\n      status = 'Winner - ' + winner\r\n    } else if (this.state.stepNumber === 9) {\r\n      classStatus = 'status-draw'\r\n      status = 'Draw'\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? \"X\" : \"O\")\r\n      classStatus = 'status'\r\n    }\r\n    return (\r\n      <div className=\"game\">\r\n        <div className={`status ${classStatus}`}>\r\n          {status}\r\n        </div>\r\n        <div>\r\n          <div className=\"game-board\">\r\n            <Board\r\n              sequence={squaresWin}\r\n              squares={current.squares}\r\n              onClick={(i) => this.handleClick(i)} />\r\n          </div>\r\n          <div className=\"game-info\">\r\n\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ]\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return (\r\n        {\r\n          winner: squares[a],\r\n          squaresWin: lines[i]\r\n        }\r\n      )\r\n    }\r\n  }\r\n  return {\r\n    winner: false,\r\n    squaresWin: null\r\n  };\r\n}"],"sourceRoot":""}